!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!M[e]||!x[e])return;for(var n in x[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(m[n]=t[n]);0==--h&&0===g&&w()}(e,n),t&&t(e,n)};var n,s=!0,r="be8da25d642166c08e8d",o=1e4,a={},i=[],l=[];function c(e){var t=H[e];if(!t)return q;var s=function(s){return t.hot.active?(H[s]?-1===H[s].parents.indexOf(e)&&H[s].parents.push(e):(i=[e],n=s),-1===t.children.indexOf(s)&&t.children.push(s)):(console.warn("[HMR] unexpected require("+s+") from disposed module "+e),i=[]),q(s)},r=function(e){return{configurable:!0,enumerable:!0,get:function(){return q[e]},set:function(t){q[e]=t}}};for(var o in q)Object.prototype.hasOwnProperty.call(q,o)&&"e"!==o&&Object.defineProperty(s,o,r(o));return s.e=function(e){return"ready"===u&&p("prepare"),g++,q.e(e).then(t,function(e){throw t(),e});function t(){g--,"prepare"===u&&(b[e]||S(e),0===g&&0===h&&w())}},s}var d=[],u="idle";function p(e){u=e;for(var t=0;t<d.length;t++)d[t].call(null,e)}var f,m,y,h=0,g=0,b={},x={},M={};function v(e){return+e+""===e?+e:e}function k(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return s=e,p("check"),(t=o,t=t||1e4,new Promise(function(e,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var s=new XMLHttpRequest,o=q.p+""+r+".hot-update.json";s.open("GET",o,!0),s.timeout=t,s.send(null)}catch(e){return n(e)}s.onreadystatechange=function(){if(4===s.readyState)if(0===s.status)n(new Error("Manifest request to "+o+" timed out."));else if(404===s.status)e();else if(200!==s.status&&304!==s.status)n(new Error("Manifest request to "+o+" failed."));else{try{var t=JSON.parse(s.responseText)}catch(e){return void n(e)}e(t)}}})).then(function(e){if(!e)return p("idle"),null;x={},b={},M=e.c,y=e.h,p("prepare");var t=new Promise(function(e,t){f={resolve:e,reject:t}});m={};return S(0),"prepare"===u&&0===g&&0===h&&w(),t});var t}function S(e){M[e]?(x[e]=!0,h++,function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");n.charset="utf-8",n.src=q.p+""+e+"."+r+".hot-update.js",t.appendChild(n)}(e)):b[e]=!0}function w(){p("ready");var e=f;if(f=null,e)if(s)Promise.resolve().then(function(){return j(s)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var n in m)Object.prototype.hasOwnProperty.call(m,n)&&t.push(v(n));e.resolve(t)}}function j(t){if("ready"!==u)throw new Error("apply() is only allowed in ready status");var n,s,o,l,c;function d(e){for(var t=[e],n={},s=t.slice().map(function(e){return{chain:[e],id:e}});s.length>0;){var r=s.pop(),o=r.id,a=r.chain;if((l=H[o])&&!l.hot._selfAccepted){if(l.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:o};if(l.hot._main)return{type:"unaccepted",chain:a,moduleId:o};for(var i=0;i<l.parents.length;i++){var c=l.parents[i],d=H[c];if(d){if(d.hot._declinedDependencies[o])return{type:"declined",chain:a.concat([c]),moduleId:o,parentId:c};-1===t.indexOf(c)&&(d.hot._acceptedDependencies[o]?(n[c]||(n[c]=[]),f(n[c],[o])):(delete n[c],t.push(c),s.push({chain:a.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function f(e,t){for(var n=0;n<t.length;n++){var s=t[n];-1===e.indexOf(s)&&e.push(s)}}t=t||{};var h={},g=[],b={},x=function(){console.warn("[HMR] unexpected require("+S.moduleId+") to disposed module")};for(var k in m)if(Object.prototype.hasOwnProperty.call(m,k)){var S;c=v(k);var w=!1,j=!1,T=!1,_="";switch((S=m[k]?d(c):{type:"disposed",moduleId:k}).chain&&(_="\nUpdate propagation: "+S.chain.join(" -> ")),S.type){case"self-declined":t.onDeclined&&t.onDeclined(S),t.ignoreDeclined||(w=new Error("Aborted because of self decline: "+S.moduleId+_));break;case"declined":t.onDeclined&&t.onDeclined(S),t.ignoreDeclined||(w=new Error("Aborted because of declined dependency: "+S.moduleId+" in "+S.parentId+_));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(S),t.ignoreUnaccepted||(w=new Error("Aborted because "+c+" is not accepted"+_));break;case"accepted":t.onAccepted&&t.onAccepted(S),j=!0;break;case"disposed":t.onDisposed&&t.onDisposed(S),T=!0;break;default:throw new Error("Unexception type "+S.type)}if(w)return p("abort"),Promise.reject(w);if(j)for(c in b[c]=m[c],f(g,S.outdatedModules),S.outdatedDependencies)Object.prototype.hasOwnProperty.call(S.outdatedDependencies,c)&&(h[c]||(h[c]=[]),f(h[c],S.outdatedDependencies[c]));T&&(f(g,[S.moduleId]),b[c]=x)}var L,E=[];for(s=0;s<g.length;s++)c=g[s],H[c]&&H[c].hot._selfAccepted&&E.push({module:c,errorHandler:H[c].hot._selfAccepted});p("dispose"),Object.keys(M).forEach(function(e){!1===M[e]&&function(e){delete installedChunks[e]}(e)});for(var I,A,O=g.slice();O.length>0;)if(c=O.pop(),l=H[c]){var C={},P=l.hot._disposeHandlers;for(o=0;o<P.length;o++)(n=P[o])(C);for(a[c]=C,l.hot.active=!1,delete H[c],delete h[c],o=0;o<l.children.length;o++){var N=H[l.children[o]];N&&((L=N.parents.indexOf(c))>=0&&N.parents.splice(L,1))}}for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(l=H[c]))for(A=h[c],o=0;o<A.length;o++)I=A[o],(L=l.children.indexOf(I))>=0&&l.children.splice(L,1);for(c in p("apply"),r=y,b)Object.prototype.hasOwnProperty.call(b,c)&&(e[c]=b[c]);var R=null;for(c in h)if(Object.prototype.hasOwnProperty.call(h,c)&&(l=H[c])){A=h[c];var D=[];for(s=0;s<A.length;s++)if(I=A[s],n=l.hot._acceptedDependencies[I]){if(-1!==D.indexOf(n))continue;D.push(n)}for(s=0;s<D.length;s++){n=D[s];try{n(A)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:c,dependencyId:A[s],error:e}),t.ignoreErrored||R||(R=e)}}}for(s=0;s<E.length;s++){var U=E[s];c=U.module,i=[c];try{q(c)}catch(e){if("function"==typeof U.errorHandler)try{U.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:c,error:n,originalError:e}),t.ignoreErrored||R||(R=n),R||(R=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:c,error:e}),t.ignoreErrored||R||(R=e)}}return R?(p("fail"),Promise.reject(R)):(p("idle"),new Promise(function(e){e(g)}))}var H={};function q(t){if(H[t])return H[t].exports;var s=H[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var s=0;s<e.length;s++)t._acceptedDependencies[e[s]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},check:k,apply:j,status:function(e){if(!e)return u;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:a[e]};return n=void 0,t}(t),parents:(l=i,i=[],l),children:[]};return e[t].call(s.exports,s,s.exports,c(t)),s.l=!0,s.exports}q.m=e,q.c=H,q.d=function(e,t,n){q.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},q.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},q.t=function(e,t){if(1&t&&(e=q(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(q.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)q.d(n,s,function(t){return e[t]}.bind(null,s));return n},q.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return q.d(t,"a",t),t},q.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},q.p="",q.h=function(){return r},c("./src/index.js")(q.s="./src/index.js")}({"./node_modules/css-loader/index.js!./src/mainHero/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".mainHero-name,\r\n.mainHero-HP{\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n\tleft: 69%;\r\n\ttop: 5%;\r\n\tfont-size: 24px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.mainHero-name{\r\n\tleft: 10%;\r\n\ttop: 30px;\r\n}\r\n\r\n.mainHero-HP{\r\n\tleft: 11%;\r\n\ttop: 60px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/monsters/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".main-hero{\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n}\r\n\r\n.monster-info{\r\n\twidth: 1280px;\r\n\tmargin: 0 auto;\r\n\tposition: relative;\r\n}\r\n\r\n.monster-name,\r\n.monster-HP{\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n\tleft: 69%;\r\n\ttop: 5%;\r\n\tfont-size: 24px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.monster-HP{\r\n\tleft: 85%;\r\n\ttop: 100px;\r\n}\r\n\r\n.monster-name{\r\n\tleft: 80%;\r\n\ttop: 30px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/tasks/actorsMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".actMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.actMet{\r\n\twidth: 550px;\r\n\theight: 480px;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".audioMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/tasks/compareMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".lessMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/falsyMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".falsyMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\nselect{\r\n\tmargin-top: 10px;\r\n\tfont-size: 25px;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".mathMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/tasks/missedMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".missedMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/questionsMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".qMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/sequenceMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".seqMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css":function(e,t,n){(e.exports=n("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".translateMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(59, 237, 106, 0.3);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n",""])},"./node_modules/css-loader/lib/css-base.js":function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",s=e[3];if(!s)return n;if(t&&"function"==typeof btoa){var r=(a=s,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),o=s.sources.map(function(e){return"/*# sourceURL="+s.sourceRoot+e+" */"});return[n].concat(o).concat([r]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var s={},r=0;r<this.length;r++){var o=this[r][0];"number"==typeof o&&(s[o]=!0)}for(r=0;r<e.length;r++){var a=e[r];"number"==typeof a[0]&&s[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},"./node_modules/style-loader/lib/addStyles.js":function(e,t,n){var s,r,o={},a=(s=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=s.apply(this,arguments)),r}),i=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),l=null,c=0,d=[],u=n("./node_modules/style-loader/lib/urls.js");function p(e,t){for(var n=0;n<e.length;n++){var s=e[n],r=o[s.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](s.parts[a]);for(;a<s.parts.length;a++)r.parts.push(b(s.parts[a],t))}else{var i=[];for(a=0;a<s.parts.length;a++)i.push(b(s.parts[a],t));o[s.id]={id:s.id,refs:1,parts:i}}}}function f(e,t){for(var n=[],s={},r=0;r<e.length;r++){var o=e[r],a=t.base?o[0]+t.base:o[0],i={css:o[1],media:o[2],sourceMap:o[3]};s[a]?s[a].parts.push(i):n.push(s[a]={id:a,parts:[i]})}return n}function m(e,t){var n=i(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var s=d[d.length-1];if("top"===e.insertAt)s?s.nextSibling?n.insertBefore(t,s.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),d.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=i(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,r)}}function y(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=d.indexOf(e);t>=0&&d.splice(t,1)}function h(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),g(t,e.attrs),m(e,t),t}function g(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function b(e,t){var n,s,r,o;if(t.transform&&e.css){if(!(o=t.transform(e.css)))return function(){};e.css=o}if(t.singleton){var a=c++;n=l||(l=h(t)),s=v.bind(null,n,a,!1),r=v.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",g(t,e.attrs),m(e,t),t}(t),s=function(e,t,n){var s=n.css,r=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||o)&&(s=u(s));r&&(s+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([s],{type:"text/css"}),i=e.href;e.href=URL.createObjectURL(a),i&&URL.revokeObjectURL(i)}.bind(null,n,t),r=function(){y(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),s=function(e,t){var n=t.css,s=t.media;s&&e.setAttribute("media",s);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),r=function(){y(n)});return s(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;s(e=t)}else r()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=f(e,t);return p(n,t),function(e){for(var s=[],r=0;r<n.length;r++){var a=n[r];(i=o[a.id]).refs--,s.push(i)}e&&p(f(e,t),t);for(r=0;r<s.length;r++){var i;if(0===(i=s[r]).refs){for(var l=0;l<i.parts.length;l++)i.parts[l]();delete o[i.id]}}}};var x,M=(x=[],function(e,t){return x[e]=t,x.filter(Boolean).join("\n")});function v(e,t,n,s){var r=n?"":s.css;if(e.styleSheet)e.styleSheet.cssText=M(t,r);else{var o=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}},"./node_modules/style-loader/lib/urls.js":function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,s=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var r,o=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(r=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:s+o.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},"./src/background/img/game-background-earth.png":function(e,t,n){e.exports=n.p+"134478bab868f2db7348353ffcdd21d4.png"},"./src/index.js":function(e,t,n){"use strict";n.r(t);var s=n("./src/background/img/game-background-earth.png"),r=n.n(s);n("./src/mainHero/index.css");var o=n("./src/mainHero/img/main-hero.png"),a=n.n(o);n("./src/monsters/index.css");var i=n("./src/monsters/img/head1.png"),l=n.n(i),c=n("./src/monsters/img/head2.png"),d=n.n(c),u=n("./src/monsters/img/head3.png"),p=n.n(u),f=n("./src/monsters/img/body1.png"),m=n.n(f),y=n("./src/monsters/img/body2.png"),h=n.n(y),g=n("./src/monsters/img/body3.png"),b=n.n(g),x=n("./src/monsters/img/legs1.png"),M=n.n(x),v=n("./src/monsters/img/legs2.png"),k=n.n(v),S=n("./src/monsters/img/legs3.png"),w=n.n(S),j=n("./src/monsters/img/weapon1.png"),H=n.n(j),q=n("./src/monsters/img/weapon2.png"),T=n.n(q),_=n("./src/monsters/img/weapon3.png"),L=n.n(_);function E(){const e=document.querySelector("canvas").getContext("2d");!function(){let e=document.querySelector(".monster-name"),t=["Terrible","Angry","Snotty"],n=["ogre","human","elf"],s=["Tom","James","Monica","Anton"],r=Math.floor(Math.random()*t.length),o=Math.floor(Math.random()*n.length),a=Math.floor(Math.random()*s.length),i=t[r]+" "+n[o]+" "+s[a];e.innerHTML=i}(),function(){let t=new Image,n=[m.a,h.a,b.a],s=Math.floor(Math.random()*n.length);t.onload=function(){e.drawImage(t,1090,390)},t.src=n[s]}(),function(){let t=new Image,n=[l.a,d.a,p.a],s=Math.floor(Math.random()*n.length);t.onload=function(){e.drawImage(t,1070,255)},t.src=n[s]}(),function(){let t=new Image,n=[M.a,k.a,w.a],s=Math.floor(Math.random()*n.length);t.onload=function(){e.drawImage(t,1110,550)},t.src=n[s]}(),function(){let t=new Image,n=[H.a,T.a,L.a],s=Math.floor(Math.random()*n.length);t.onload=function(){e.drawImage(t,990,360)},t.src=n[s]}()}n("./src/tasks/mathMet/index.css");function I(){const e=document.querySelector(".monster-HP"),t=document.querySelector("canvas").getContext("2d");let n=Math.floor(100*Math.random()+0),s=localStorage.getItem("monsterHP");if((s-=n)>0&&(localStorage.setItem("monsterHP",s),setTimeout(()=>{e.innerHTML=s+" HP"},3e3)),s<0){localStorage.setItem("monsterHP",100);let n=+localStorage.getItem("monstersKilled");n+=1,localStorage.setItem("monstersKilled",n),setTimeout(()=>{alert("Congradulations, you killed monster!"),e.innerHTML="100 HP",t.clearRect(900,200,400,395),E()},3e3)}}function A(){const e=document.querySelector(".mainHero-HP");let t=Math.floor(50*Math.random()+0),n=localStorage.getItem("mainHero");(n-=t)>0&&(localStorage.setItem("mainHero",n),setTimeout(()=>{e.innerHTML=n+" HP"},3e3),alert("Your answer is incorrect")),n<=0&&(function(){let e=+localStorage.getItem("monstersKilled"),t=+localStorage.getItem("curplayerid"),n=localStorage.getItem("rating");n=null==n?[]:JSON.parse(n);let s=JSON.parse(localStorage.getItem("players"))[t],r={name:s.lastName+" "+s.firstName,streak:e};n.push(r),n=n.sort((e,t)=>t.streak-e.streak).slice(0,10),localStorage.setItem("rating",JSON.stringify(n))}(),function(){const e=document.querySelector("#goLP"),t=document.querySelector(".game-over"),n=document.querySelector("tbody"),s=document.querySelector(".mainHero-HP");let r=localStorage.getItem("rating");r=null==r?[]:JSON.parse(r);for(var o=0;o<r.length;o++){let e=document.createElement("tr"),t=document.createElement("td"),s=document.createElement("td");t.innerText=r[o].name,s.innerText=r[o].streak,e.appendChild(t),e.appendChild(s),n.appendChild(e)}setTimeout(()=>{s.innerHTML="0 HP",t.style.display="flex"},3e3),e.addEventListener("click",e=>{location.href="../../index.html"})}())}var O=n("./src/tasks/spellsAnimation/img/spell2.png"),C=n.n(O);function P(){const e=document.querySelector("canvas").getContext("2d");let t=260,n=new Image;n.onload=function(){!function(){let e=new Audio;e.src="../src/tasks/spellsAnimation/sounds/deathPulse.mp3",e.volume=.5,e.autoplay=!0}();let s=setInterval(()=>{e.clearRect(t,445,128,128),e.drawImage(n,t,445),t<900?t++:(e.clearRect(900,445,128,128),clearInterval(s))},3)},n.src=C.a}var N=n("./src/tasks/spellsAnimation/img/spell1.png"),R=n.n(N);function D(){const e=document.querySelector("canvas").getContext("2d");let t=900,n=new Image;n.onload=function(){!function(){let e=new Audio;e.src="../src/tasks/spellsAnimation/sounds/dragonSlave.mp3",e.volume=.5,e.autoplay=!0}();let s=setInterval(()=>{e.clearRect(t,445,128,128),e.drawImage(n,t,445),t>260?t--:(e.clearRect(260,445,128,128),clearInterval(s))},3)},n.src=R.a}!function(){const e=document.createElement("button");e.className="btn",e.id="callMathMet",e.innerHTML="Arithmetics",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="mathMet",e.innerHTML='<span class="taskHeading">Solve an example:</span><span class="task"></span><label for="#userMathInput">Your answer:</label><input type="text" id="userMathInput"><button type="submit" id="sendMathAnswer" class="send">Подтвердить</button><button type="submit" id="mathMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const U=document.querySelector("#callMathMet"),z=document.querySelector(".casts"),F=document.querySelector(".mathMet"),J=document.querySelector("#sendMathAnswer"),B=document.querySelector("#mathMainMenu"),$=document.querySelector("#userMathInput"),Y=document.querySelector(".task");let G=[];U.addEventListener("click",e=>{z.style.display="none",F.style.display="flex",G=function(){let e=0,t=0,n=["+","-","/","*"],s=Math.floor(Math.random()*n.length);return e=Math.floor(30*Math.random()+0),t=Math.floor(30*Math.random()+0),[n[s],e,t]}(),Y.innerHTML=G[1]+" "+G[0]+" "+G[2]});B.addEventListener("click",e=>{F.style.display="none",z.style.display="flex"}),J.addEventListener("click",e=>{$.value===function(){let e=0;switch(G[0]){case"+":return`${e=G[1]+G[2]}`;case"-":return`${e=G[1]-G[2]}`;case"*":return`${e=G[1]*G[2]}`;case"/":return(e=G[1]/G[2])%2==0?`${e=e.toFixed(0)}`:`${e=e.toFixed(1)}`}}()?(I(),F.style.display="none",Y.innerHTML="",P(),setTimeout(()=>{z.style.display="flex"},3e3)):(A(),F.style.display="none",Y.innerHTML="",D(),setTimeout(()=>{z.style.display="flex"},3e3))});n("./src/tasks/audioMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callAudioMet",e.innerHTML="Audio",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="audioMet",e.innerHTML='<span class="taskHeading">Enter the word that you heard:</span><span class="task"><audio src="" controls></audio></span><label for="#userAudioInput">Your answer:</label><input type="text" id="userAudioInput"><button type="submit" id="sendAudioAnswer" class="send">Подтвердить</button><button type="submit" id="audioMainMenu" class="send">Назад</button>;',document.body.appendChild(e)}();const Q=document.querySelector(".casts"),K=document.querySelector(".audioMet"),W=document.querySelector("#sendAudioAnswer"),X=document.querySelector("#audioMainMenu"),V=document.querySelector("#callAudioMet"),Z=document.querySelector("#userAudioInput"),ee=document.querySelector("audio"),te={"../src/tasks/audioMet/sounds/activity.mp3":"activity","../src/tasks/audioMet/sounds/dog.mp3":"dog","../src/tasks/audioMet/sounds/global.mp3":"global","../src/tasks/audioMet/sounds/inspiration.mp3":"inspiration","../src/tasks/audioMet/sounds/mind.mp3":"mind","../src/tasks/audioMet/sounds/strategy.mp3":"strategy","../src/tasks/audioMet/sounds/transfer.mp3":"transfer"};let ne="";V.addEventListener("click",e=>{Q.style.display="none",ne=Object.keys(te)[Math.floor(Math.random()*Object.keys(te).length)],ee.src=ne,K.style.display="flex"}),X.addEventListener("click",e=>{K.style.display="none",Q.style.display="flex"}),W.addEventListener("click",e=>{Z.value===te[ne]?(I(),K.style.display="none",ee.src="",P(),setTimeout(()=>{Q.style.display="flex"},3e3)):(A(),K.style.display="none",ee.src="",D(),setTimeout(()=>{Q.style.display="flex"},3e3))});n("./src/tasks/falsyMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callFalsyMet",e.innerHTML="True/False",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="falsyMet",e.innerHTML='<span class="taskHeading">Choose true or false:</span><span class="task" id="falsyText"></span><label for="#userFalsyInput">Your answer:</label><select name="true/false" id="userFalsyInput"><option value="true">True</option><option value="false">False</option></select><button type="submit" id="sendFalsyAnswer" class="send">Подтвердить</button><button type="submit" id="FalsyMainMenu" class="send">Назад</button></div>',document.body.appendChild(e)}();const se=document.querySelector("#callFalsyMet"),re=document.querySelector(".casts"),oe=document.querySelector(".falsyMet"),ae=document.querySelector("#sendFalsyAnswer"),ie=document.querySelector("#FalsyMainMenu"),le=document.querySelector("#userFalsyInput"),ce=document.querySelector("#falsyText");let de={"Writer Mark Twain invented and patented a bra clasp":["true","True"],"The Eiffel Tower in the summer becomes higher by 15 centimeters":["true","True"],'The space on the forehead between the eyebrows is called a "racket"':["false","False"],"The flea can accelerate faster than the space shuttle":["true","True"],"Human DNA and banana are similar to 90%":["false","False"]},ue="";se.addEventListener("click",e=>{re.style.display="none",ue=Object.keys(de)[Math.floor(Math.random()*Object.keys(de).length)],ce.innerHTML=ue,oe.style.display="flex"}),ie.addEventListener("click",e=>{oe.style.display="none",re.style.display="flex"}),ae.addEventListener("click",e=>{let t=[],n=!1;t=de[ue];for(let e=0;e<t.length;e++)le.value===t[e]&&(n=!0);n?(I(),oe.style.display="none",ce.innerHTML="",P(),setTimeout(()=>{re.style.display="flex"},3e3)):(A(),oe.style.display="none",ce.innerHTML="",D(),setTimeout(()=>{re.style.display="flex"},3e3))});const pe={dog:["собака","пес","собачка"],task:["задача","урок"],cat:["кот","кошка"],mind:["разум","ум","мнение"],game:["развлечение","игра","партия"],skirt:["юбка","подол","край"],global:["глобальный","мировой","общий","всеобщий"],activity:["активность","деятельность","энергия"],amount:["количество","сумма","итог"],blind:["слепой","слепить","штора"],cartoon:["мультфильм","карикатура","комикс","мультик"],transfer:["перевод","передача","трансфер"],dictionary:["словарь"],environment:["окружающая среда","окружение","среда"],famous:["известный","знаменитый","замечательный"],horror:["ужас","ужастик"],inspiration:["вдохновение","воодушевление","вдох"],jealous:["завистливый","ревнивый","заботливый","зависть","ревность"],lucky:["счастливый","везучий","удачливый"],message:["сообщение","послание","письмо"],mysterious:["загадочный","таинственный","непостижимый"],realize:["реализовать","понимать","осуществлять"]};n("./src/tasks/translateMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callTranslateMet",e.innerHTML="Translate",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="translateMet",e.innerHTML='<span class="taskHeading">Translate the next word:</span><span class="task" id="translateText"></span><label for="#userTranslateInput">Your answer:</label><input type="text" id="userTranslateInput"><button type="submit" id="sendTranslateAnswer" class="send">Подтвердить</button><button type="submit" id="translateMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const fe=document.querySelector("#callTranslateMet"),me=document.querySelector(".casts"),ye=document.querySelector(".translateMet"),he=document.querySelector("#sendTranslateAnswer"),ge=document.querySelector("#translateMainMenu"),be=document.querySelector("#userTranslateInput"),xe=document.querySelector("#translateText");let Me="";fe.addEventListener("click",e=>{me.style.display="none",ye.style.display="flex",Me=Object.keys(pe)[Math.floor(Math.random()*Object.keys(pe).length)],xe.innerHTML=Me}),ge.addEventListener("click",e=>{ye.style.display="none",me.style.display="flex"}),he.addEventListener("click",e=>{let t=[],n=!1;t=pe[Me];for(let e=0;e<t.length;e++)be.value===t[e]&&(n=!0);n?(I(),ye.style.display="none",xe.innerHTML="",P(),setTimeout(()=>{me.style.display="flex"},3e3)):(A(),ye.style.display="none",xe.innerHTML="",D(),setTimeout(()=>{me.style.display="flex"},3e3))});n("./src/tasks/missedMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callMissedMet",e.innerHTML="Missed letter",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="missedMet",e.innerHTML='<span class="taskHeading">Enter the missing letter:</span><span class="task" id="missedText"></span><label for="#userMissedInput">Your answer:</label><input type="text" id="userMissedInput"><button type="submit" id="sendMissedAnswer" class="send">Подтвердить</button><button type="submit" id="missedMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const ve=document.querySelector("#callMissedMet"),ke=document.querySelector(".casts"),Se=document.querySelector(".missedMet"),we=document.querySelector("#sendMissedAnswer"),je=document.querySelector("#missedMainMenu"),He=document.querySelector("#userMissedInput"),qe=document.querySelector("#missedText");let Te={com_unity:"m",Eif_el:"f",for_head:"e",ac_lerate:"c",simi_lar:"",develo_ment:"p"},_e="";ve.addEventListener("click",e=>{ke.style.display="none",_e=Object.keys(Te)[Math.floor(Math.random()*Object.keys(Te).length)],qe.innerHTML=_e,Se.style.display="flex"}),je.addEventListener("click",e=>{Se.style.display="none",ke.style.display="flex"}),we.addEventListener("click",e=>{He.value===Te[_e]?(I(),Se.style.display="none",qe.innerHTML="",P(),setTimeout(()=>{ke.style.display="flex"},3e3)):(A(),Se.style.display="none",qe.innerHTML="",D(),setTimeout(()=>{ke.style.display="flex"},3e3))});n("./src/tasks/sequenceMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callSeqMet",e.innerHTML="Sequences",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="seqMet",e.innerHTML='<span class="taskHeading">Solve the sequence:</span><span class="task" id="seqText"></span><label for="#userSeqInput">Your answer:</label><input type="text" id="userSeqInput"><button type="submit" id="sendSeqAnswer" class="send">Подтвердить</button><button type="submit" id="seqMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const Le=document.querySelector("#callSeqMet"),Ee=document.querySelector(".casts"),Ie=document.querySelector(".seqMet"),Ae=document.querySelector("#sendSeqAnswer"),Oe=document.querySelector("#seqMainMenu"),Ce=document.querySelector("#userSeqInput"),Pe=document.querySelector("#seqText");let Ne={"2, 4, 6, 8":"10","1000, 1, 500, ?, 50, 2.718":"500","Чебышев, Тургенев, Моцарт, Лермонтов, Чайковский, Берлиоз":"Моцарт","П, В, С, ?, П, С, В":"Ч","Ь, Ь, Т, Ь, ?, Ь, Ь, Т, Ь, Ь, Ь, Ь":"Й"},Re="";Le.addEventListener("click",e=>{Ee.style.display="none",Re=Object.keys(Ne)[Math.floor(Math.random()*Object.keys(Ne).length)],Pe.innerHTML=Re,Ie.style.display="flex"}),Oe.addEventListener("click",e=>{Ie.style.display="none",Ee.style.display="flex"}),Ae.addEventListener("click",e=>{Ce.value===Ne[Re]?(I(),Ie.style.display="none",Pe.innerHTML="",P(),setTimeout(()=>{Ee.style.display="flex"},3e3)):(A(),Ie.style.display="none",Pe.innerHTML="",D(),setTimeout(()=>{Ee.style.display="flex"},3e3))});n("./src/tasks/actorsMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callActMet",e.innerHTML="Actors",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="actMet",e.innerHTML='<span class="taskHeading">Enter the name and surname of the actor:</span><img class="task" id="actImg"></img><label for="#userActInput">Your answer:</label><input type="text" id="userActInput"><button type="submit" id="sendActAnswer" class="send">Подтвердить</button><button type="submit" id="actMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const De=document.querySelector("#callActMet"),Ue=document.querySelector(".casts"),ze=document.querySelector(".actMet"),Fe=document.querySelector("#sendActAnswer"),Je=document.querySelector("#actMainMenu"),Be=document.querySelector("#userActInput"),$e=document.querySelector("img");let Ye={"../src/tasks/actorsMet/img/Smith.PNG":["will smith","Will Smith"],"../src/tasks/actorsMet/img/keanureeves.PNG":["Keanu Reeves","keanu reeves"],"../src/tasks/actorsMet/img/bacon.PNG":["Kevin Bacon","kevin bacon"],"../src/tasks/actorsMet/img/redford.PNG":["Robert Radford","robert radford"],"../src/tasks/actorsMet/img/jaredleto.PNG":["Jared Leto","jared leto"]},Ge="";De.addEventListener("click",e=>{Ue.style.display="none",Ge=Object.keys(Ye)[Math.floor(Math.random()*Object.keys(Ye).length)],$e.src=Ge,ze.style.display="flex"}),Je.addEventListener("click",e=>{ze.style.display="none",Ue.style.display="flex"}),Fe.addEventListener("click",e=>{let t=[],n=!1;t=Ye[Ge];for(let e=0;e<t.length;e++)Be.value===t[e]&&(n=!0);n?(I(),ze.style.display="none",$e.src="",P(),setTimeout(()=>{Ue.style.display="flex"},3e3)):(A(),ze.style.display="none",$e.src="",D(),setTimeout(()=>{Ue.style.display="flex"},3e3))});n("./src/tasks/questionsMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callQMet",e.innerHTML="Questions",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="qMet",e.innerHTML='<span class="taskHeading">Solve the sequence:</span><span class="task" id="qText"></span><label for="#userQInput">Your answer:</label><input type="text" id="userQInput"><button type="submit" id="sendQAnswer" class="send">Подтвердить</button><button type="submit" id="qMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const Qe=document.querySelector("#callQMet"),Ke=document.querySelector(".casts"),We=document.querySelector(".qMet"),Xe=document.querySelector("#sendQAnswer"),Ve=document.querySelector("#qMainMenu"),Ze=document.querySelector("#userQInput"),et=document.querySelector("#qText");let tt={"How many months a year have 28 days?":["all","12","everyone"],"What can you see with your eyes closed?":["dreams","sleep"],"What in the fire does not burn and does not sink in the water?":["ice"],"Whom do Australians call sea osoy?":["medusa","jellyfish"],"Moscow used to be called white stone. And what city was called black?":["Chernigov","chernigov"]},nt="";Qe.addEventListener("click",e=>{Ke.style.display="none",nt=Object.keys(tt)[Math.floor(Math.random()*Object.keys(tt).length)],et.innerHTML=nt,We.style.display="flex"}),Ve.addEventListener("click",e=>{We.style.display="none",Ke.style.display="flex"}),Xe.addEventListener("click",e=>{let t=[],n=!1;t=tt[nt];for(let e=0;e<t.length;e++)Ze.value===t[e]&&(n=!0);n?(I(),We.style.display="none",et.innerHTML="",P(),setTimeout(()=>{Ke.style.display="flex"},3e3)):(A(),We.style.display="none",et.innerHTML="",D(),setTimeout(()=>{Ke.style.display="flex"},3e3))});n("./src/tasks/compareMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callLessMet",e.innerHTML="Less/More",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="lessMet",e.innerHTML='<span class="taskHeading">Enter < OR >:</span><span class="task" id="lessText"></span><label for="#userLessInput">Your answer:</label><input type="text" id="userLessInput"><button type="submit" id="sendLessAnswer" class="send">Подтвердить</button><button type="submit" id="lessMainMenu" class="send">Назад</button>',document.body.appendChild(e)}();const st=document.querySelector("#callLessMet"),rt=document.querySelector(".casts"),ot=document.querySelector(".lessMet"),at=document.querySelector("#sendLessAnswer"),it=document.querySelector("#lessMainMenu"),lt=document.querySelector("#userLessInput"),ct=document.querySelector("#lessText");let dt={"1mbit __ 100kbyt":">","1kg fluff __ 1kg iron":"=","Africa __ Russia":">","electron __ atom":"<","virus __ bacterium":"<"},ut="";st.addEventListener("click",e=>{rt.style.display="none",ut=Object.keys(dt)[Math.floor(Math.random()*Object.keys(dt).length)],ct.innerHTML=ut,ot.style.display="flex"}),it.addEventListener("click",e=>{ot.style.display="none",rt.style.display="flex"}),at.addEventListener("click",e=>{let t=[],n=!1;t=dt[ut];for(let e=0;e<t.length;e++)lt.value===t[e]&&(n=!0);n?(I(),ot.style.display="none",ct.innerHTML="",P(),setTimeout(()=>{rt.style.display="flex"},3e3)):(A(),ot.style.display="none",ct.innerHTML="",D(),setTimeout(()=>{rt.style.display="flex"},3e3))});const pt=document.createElement("canvas");pt.getContext("2d");pt.width=1280,pt.height=720,document.body.appendChild(pt);const ft=document.querySelector(".monster-HP"),mt=document.querySelector(".mainHero-HP"),yt=document.querySelector(".menu-open"),ht=document.querySelector(".casts");yt.addEventListener("click",e=>{yt.style.display="none",ht.style.display="flex"}),function(){const e=document.querySelector("canvas").getContext("2d");let t=new Image;t.onload=function(){e.drawImage(t,0,570)},t.src=r.a}(),function(){const e=document.querySelector("canvas").getContext("2d");let t=new Image;t.onload=function(){e.drawImage(t,100,445)},t.src=a.a}(),E(),localStorage.setItem("monsterHP",100),localStorage.setItem("mainHero",100),function(){let e=document.querySelector(".mainHero-name"),t=+localStorage.getItem("curplayerid"),n=localStorage.getItem("rating");n=null==n?[]:JSON.parse(n);let s=JSON.parse(localStorage.getItem("players"))[t];e.innerHTML=`${s.lastName} ${s.firstName}`,ft.innerHTML="100 HP",mt.innerHTML="100 HP"}()},"./src/mainHero/img/main-hero.png":function(e,t,n){e.exports=n.p+"3e8d39583822b3ceaf9a962f5915a12f.png"},"./src/mainHero/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/mainHero/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/mainHero/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/mainHero/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/monsters/img/body1.png":function(e,t,n){e.exports=n.p+"68d3d3bf5a12d4389b13992816071dbc.png"},"./src/monsters/img/body2.png":function(e,t,n){e.exports=n.p+"a2e5203c1aa0a8a76f3acd61416da4bc.png"},"./src/monsters/img/body3.png":function(e,t,n){e.exports=n.p+"2856132fbf353ce3f8771eb8e29ac9d0.png"},"./src/monsters/img/head1.png":function(e,t,n){e.exports=n.p+"2f1f875274575abd22b6d598c239d534.png"},"./src/monsters/img/head2.png":function(e,t,n){e.exports=n.p+"c99a5f5f67611f52b7d09b4fed2b4786.png"},"./src/monsters/img/head3.png":function(e,t,n){e.exports=n.p+"4edaebba982195c1c5ffcbfdbc895df1.png"},"./src/monsters/img/legs1.png":function(e,t,n){e.exports=n.p+"713a295fb8065e2403d792e174df2076.png"},"./src/monsters/img/legs2.png":function(e,t,n){e.exports=n.p+"b8f49da5c38a5ad5e9d43325503444be.png"},"./src/monsters/img/legs3.png":function(e,t,n){e.exports=n.p+"e87957085eb5e7b7611e30be0f29d8bf.png"},"./src/monsters/img/weapon1.png":function(e,t,n){e.exports=n.p+"bca04ae0b89e0d70d46032d3e4e57186.png"},"./src/monsters/img/weapon2.png":function(e,t,n){e.exports=n.p+"a43092e8806cbf47ecab48266aa8eb80.png"},"./src/monsters/img/weapon3.png":function(e,t,n){e.exports=n.p+"44f135ecb256170db2001fea2777bcbd.png"},"./src/monsters/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/monsters/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/monsters/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/monsters/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/actorsMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/actorsMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/actorsMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/actorsMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/audioMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/compareMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/compareMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/compareMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/compareMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/falsyMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/falsyMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/falsyMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/falsyMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/mathMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/missedMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/missedMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/missedMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/missedMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/questionsMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/questionsMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/questionsMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/questionsMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/sequenceMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/sequenceMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/sequenceMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/sequenceMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})},"./src/tasks/spellsAnimation/img/spell1.png":function(e,t,n){e.exports=n.p+"5c40142261a13fdaf17b4465d94a7690.png"},"./src/tasks/spellsAnimation/img/spell2.png":function(e,t,n){e.exports=n.p+"c9305f3dcdc9b6711f90df9e6e0c849c.png"},"./src/tasks/translateMet/index.css":function(e,t,n){var s=n("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css");"string"==typeof s&&(s=[[e.i,s,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},o=n("./node_modules/style-loader/lib/addStyles.js")(s,r);s.locals&&(e.exports=s.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css",function(t){!function(){var t=n("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css");if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,s=0;for(n in e){if(!t||e[n]!==t[n])return!1;s++}for(n in t)s--;return 0===s}(s.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)}()}),e.hot.dispose(function(){o()})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,